{% extends 'base.html.twig' %}
{% block body %}
	{% include 'components/_header.html.twig' %}

	<section class="map-bar">
		<div id="map" style="height: calc(95vh - 120px); width: 100%;"></div>
		<div
			class="mt-0">
			<!-- SIDEBAR -->
			<aside id="room-sidebar">
				<div>
					<h4>Événements récents</h4>

					<!-- Filtres -->
					<div class="filters">
						<input type="text" id="search-title" class="form-control mb-2" placeholder="Rechercher par titre..." value="{{ filter_title }}"/>

						<select id="filter-language" class="form-select mb-2">
							<option value="">Toutes les langues</option>
							{% set languages = [] %}
							{% for room in rooms %}
								{% if room.language and room.language.name not in languages %}
									{% set languages = languages|merge([room.language.name]) %}
									<option value="{{ room.language.name }}" {% if room.language.name == filter_language %} selected {% endif %}>{{ room.language.name }}</option>
								{% endif %}
							{% endfor %}
						</select>

						<input type="date" id="filter-date" class="form-control mb-3" value="{{ filter_date }}"/>
					</div>
				</div>
				<!-- Liste des rooms -->
				<div id="room-list">
					{% for room in rooms|slice(0, 10) %}
						<div class="room-card" data-title="{{ room.title|lower }}" data-lang="{{ room.language.name|lower }}" data-date="{{ room.date|date('Y-m-d') }}" data-id="{{ room.id }}">
							<strong>{{ room.title }}</strong>
							<p class="mb-1">
								<small>{{ room.date|date('d/m/Y H:i') }}</small>
							</p>
							<span class="badge bg-secondary">{{ room.language.name ?? 'Langue inconnue' }}</span>
						</div>
					{% endfor %}
				</div>
			</aside>
		</div>
	</section>

	<!-- Bouton flottant -->
	{% if is_granted('ROLE_PROFESSOR', 'ROLE_ADMIN') %}
		<button class="btn-floating" data-bs-toggle="modal" data-bs-target="#createRoomModal">+</button>
		{% else %}
	{% endif %}

	<!-- Modale de création -->
	<div class="modal fade" id="createRoomModal" tabindex="-1" aria-labelledby="createRoomModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Créer un événement</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
				</div>
				<div class="modal-body">
					{{ form_start(form) }}
					{{ form_row(form.title) }}
					{{ form_row(form.description) }}
					{{ form_row(form.date) }}
					{{ form_row(form.language) }}
					{{ form_row(form.latitude) }}
					{{ form_row(form.longitude) }}
					<div class="mb-3">
						<label class="form-label">Emplacement</label>
						<div id="modal-map" style="height: 300px;"></div>
						<small class="form-text text-muted">Cliquez sur la carte pour choisir l'emplacement de l'événement</small>
					</div>
					<button class="btn btn-success mt-3">Créer</button>
					{{ form_end(form) }}
				</div>
			</div>
		</div>
	</div>

	<div class="modal fade" id="roomInfoModal" tabindex="-1" aria-labelledby="roomInfoModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content shadow rounded-4">
				<div class="modal-header bg-light border-bottom-0">
					<div class="d-flex align-items-center gap-3">
						
						<div>
							<h5 class="modal-title mb-0" id="modalRoomTitle"></h5>
							<div class="creator-info">
							<p>Créer par</p><p id="modalRoomCreator"></p>
							</div>
							<div class="language-info">
								<p>Language : </p>
								<span id="modalRoomEmoji" style="font-size: 2rem;"></span>
								<small class="text-muted" id="modalRoomLanguage"></small>
							</div>
						</div>
					</div>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
				</div>
				<div class="modal-body">
					<p id="modalRoomDescription" class="mb-3"></p>
					<p class="mb-1">
						<strong>Date :</strong>
						<span id="modalRoomDate"></span>
					</p>
					<p class="mb-3">
						<strong>Places restantes :</strong>
						<span id="modalRoomSlots"></span>
					</p>

					<div>
						<strong>Participants :</strong>
						<div id="modalRoomParticipants" class="mt-2 d-flex flex-column gap-2">
						</div>
					</div>
				</div>
				<div class="modal-footer border-top-0">
					<a id="joinRoomLink" class="btn btn-primary w-100">Rejoindre l'activité</a>
				</div>
			</div>
		</div>
	</div>


	<!-- Script pour charger les modules et initialiser la carte -->
	<script type="module">
		import {initMap} from '{{ asset('js/map.js') }}';
import {initModalMap} from '{{ asset('js/modal-map.js') }}';
import '{{ asset('js/filters.js') }}';

window.currentUserId = {{ currentUserId|default('null') }};
window.joinRoomUrlTemplate = "{{ path('app_room_join', {'id': 'ROOM_ID'}) }}";

function loadGoogleMaps() {
return new Promise((resolve) => {
if (window.google && window.google.maps) {
resolve();
} else {
const script = document.createElement('script');
script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCOpwx5ojbAn5ysXe5aTEU40ygMHG_kfwU';
script.async = true;
script.defer = true;
script.onload = () => resolve();
document.head.appendChild(script);
}
});
}

function waitForMapContainer() {
return new Promise((resolve) => {
const checkContainer = () => {
const container = document.getElementById('map');
if (container && container.offsetWidth > 0 && container.offsetHeight > 0) {
resolve();
} else {
setTimeout(checkContainer, 100);
}
};
checkContainer();
});
}

// Fonction principale d'initialisation
async function initializeMap() {
console.log('Initializing map...');
await waitForMapContainer();
await loadGoogleMaps();
initMap({{ rooms|json_encode|raw }});
initModalMap('createRoomModal', 'modal-map', 'room_latitude', 'room_longitude');
console.log('Map initialization complete');
}

// Au chargement du DOM
document.addEventListener('DOMContentLoaded', initializeMap);

// Vérifiez si nous venons de nous connecter
const urlParams = new URLSearchParams(window.location.search);
if (urlParams.has('post_login')) {
console.log('Post-login detected, forcing map initialization');
// Supprimez le paramètre de l'URL
const newUrl = window.location.pathname;
window.history.replaceState({}, document.title, newUrl);

// Force l'initialisation après un délai
setTimeout(initializeMap, 500);
}
	</script>

{% endblock %}
